{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","text","map","ingredient","Math","round","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAiBeA,EAdA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACI,sBAAKC,UAAaC,IAAMC,OAAxB,UACI,oBAAIF,UAAYC,IAAML,MAAtB,SAA8BA,IAC9B,oBAAII,UAAWC,IAAME,KAArB,SACKJ,EAAYK,KAAI,SAAAC,GAAU,OACvB,oBAAIL,UAAWC,IAAME,KAArB,SAA4BE,EAAWF,YAG/C,oBAAGH,UAAWC,IAAMJ,SAApB,8BAAgDS,KAAKC,MAAMV,MAC3D,qBAAKG,UAAYC,IAAMH,MAAOU,IAAKV,EAAOW,IAAI,SC6C3CC,G,MAtDH,WACV,IADgB,EAGcC,mBAAS,IAHvB,mBAGTC,EAHS,KAGAC,EAHA,OAIYF,mBAAS,IAJrB,mBAITG,EAJS,KAIDC,EAJC,OAKUJ,mBAAS,SALnB,mBAKTK,EALS,KAKFC,EALE,KAOhBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAXf,WAWe,oBAVd,qCASG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDAoBhB,OACE,sBAAKzB,UAAY,MAAjB,UACE,uBAAM4B,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKoBf,UAAW,cAAvC,UACE,uBAAOA,UAAW,aAAa+B,KAAM,OAAOC,MAAOlB,EAAQmB,SAd5C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAcf,wBAAQhC,UAAW,gBAAgB+B,KAAM,SAAzC,uBAIF,qBAAK/B,UAAU,UAAf,SACGY,EAAQR,KAAI,SAAAF,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAOiC,MACrBtC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOiC,iBClChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,SAAW,4B","file":"static/js/main.005ce441.chunk.js","sourcesContent":["import React from 'react';\nimport style from './recipe.module.css';\n\nconst Recipe = ({title,calories,image,ingredients}) => {\n    return (\n        <div className = {style.recipe}>\n            <h1 className= {style.title}>{title}</h1>\n            <ol className={style.text}>\n                {ingredients.map(ingredient => (\n                    <li className={style.text}>{ingredient.text}</li>\n                ))}\n            </ol>\n            <p className={style.calories}>Total Calories : {Math.round(calories)}</p>\n            <img className= {style.image} src={image} alt=\"\"/>\n        </div>\n    );\n};\nexport default Recipe;","import React,{useEffect, useState} from 'react'; \nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = '651cad58';\n  const APP_KEY = '4f3189bfe364ffc16c859da5092d456e';\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('salad');\n\n  useEffect(()=>{\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n   \n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n  return(\n    <div className = \"App\">\n      <form onSubmit= {getSearch} className =\"search-form\">\n        <input className =\"search-bar\" type= \"text\" value={search} onChange={updateSearch} />\n        <button className =\"search-button\" type= \"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe \n            key={recipe.recipe.label}\n            title={recipe.recipe.label} \n            calories={recipe.recipe.calories}             \n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"title\":\"recipe_title__1jR5P\",\"image\":\"recipe_image__BtdIE\",\"text\":\"recipe_text__1bcJv\",\"calories\":\"recipe_calories__24PXH\"};"],"sourceRoot":""}